Begin Transaction M3 --M3 is the arbitrary name I have given the transacation in this example...

If Object_ID('tempdb..#Table') Is Null
	Begin
		Create Table #Table (PrimaryID int, SecondaryID int, Val decimal(10,2))
	End

If (Select Count(1) From #Table) = 0
	Begin
		--Must check this temporary table row count each time the query is executed, otherwise data will build up and create unwanted duplicates... In a production environment, this check, along with its subsequent insert would probably be removed from the sourcecode... For obvious reasons... You would want your data to be populated from some other source of actually useful logic!!!... I could have truncated the temp table in this example, but I don't want to risk including logic that you may forget to change, which could accidentally delete data from your database due to human error...
		Insert Into #Table
		Values
		(1,1,100),
		(1,2,150),
		(1,3,null),
		(2,1,50),
		(2,2,null),
		(2,3,null),
		(2,4,60),
		(2,5,null),
		(2,6,null)
	End

If Object_ID('tempdb..#Table_Intermediate') Is Null
	Begin
		Create Table #Table_Intermediate ([PrimaryID] int, [SecondaryID] int, [Previous_Non_Null_ID] int)
	End

Delete From #Table_Intermediate --Must truncate this temporary table each time the query is executed, otherwise data will build up and create unwanted duplicates...

Insert Into #Table_Intermediate ([PrimaryID], [SecondaryID], [Previous_Non_Null_ID])
Select
	A.[PrimaryID] As [PrimaryID],
	A.[SecondaryID] As [SecondaryID],
	Max(B.[SecondaryID]) As [Previous_Non_Null_ID]
From #Table A With (Tablock) --THIS TABLOCK IS VERY IMPORTANT, IN ORDER TO AVOID DATABASE CORRUPTION, DUE TO ASYNCHRONOUS READING AND WRITING OF DATA!!!!!!!!!!... (You must apply the tablock to the table that you aim to update)...
Inner Join #Table B On
	(B.[Val] Is Not Null And B.[PrimaryID] = A.[PrimaryID] And B.[SecondaryID] <= A.[SecondaryID])
Group By A.[PrimaryID], A.[SecondaryID]

Update A
Set Val = C.[Val]
From #Table A
Inner Join #Table_Intermediate B On
	(B.[PrimaryID] = A.[PrimaryID] And B.[SecondaryID] = A.[SecondaryID])
Inner Join #Table C On
	(B.[PrimaryID] = C.[PrimaryID] And C.[SecondaryID] = B.[Previous_Non_Null_ID])
Where
	A.[SecondaryID] > 1 
	And A.[Val] Is Null

Commit Transaction M3 --It is important to commit the transaction as soon as the insert select completes, so that the table lock can be rapidly freed... Otherwise the update will likely have no real effect on data in the database, or there may be a lot of user waiting around and even solution crashes...


Select * From #Table